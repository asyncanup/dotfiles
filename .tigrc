# tigrc

# Colors
color cursor black white
color title-focus black white
color title-blur black default

# Add all files
bind status A @git add -A
bind stage A @git add -A

# Intent to add, useful to add-patch a new file
bind status N !@git add -N %(file)

# Stage a single line
bind stage 1 stage-update-line

# Add a fixup commit for the currently highlighted commit in main view
bind main + !git commit --fixup=%(commit)

# Interactive rebase, showing fixup commits right after their base
bind main <Ctrl-r> !git rebase --autosquash -i %(commit)

# Revert
bind main ! !git revert %(commit)

# Create a new branch
bind refs n !@git branch "%(prompt Enter branch name: )"

# Add/edit notes for the current commit used during a review
bind main T !git notes edit %(commit)

# Commit from status view
bind status C !git commit
bind stage C !git commit

# Amend last commit
bind status + !git commit --amend

# Drop the selected stash
bind stash D !?git stash drop %(stash)

# Apply the selected stash
bind stash A !?git stash apply %(stash)

# Stash the unstaged changes
bind status S !git stash save --keep-index "%(prompt Enter stash name: )"

# Delete a file
bind status D !@?rm %(file)

# Tag the selected commit
bind main T !git tag -a "%(prompt Enter tag name: )" %(commit)

# Push local changes to origin
bind main P !git push origin

# Open the commit on Github
bind generic B @sh -c "xdg-open 'https://'$(git remote -v | grep -Eo 'github.com[:/][^.]+' | head -1 | tr : /)'/commit/%(commit)'"

# Patch the file under the cursor
bind status P !git add --patch %(file)

# Copy commit title to clipboard
bind generic 9 !@sh -c "git show -s --format=%s %(commit) | pbcopy" # Mac

# Add selected file to .gitignore and open vim for additional changes
bind status <Ctrl-i> !sh -c "echo %(file) >> .gitignore && $EDITOR .gitignore"

# Checkout commit in main view
bind main O !git checkout %(commit)

# Checkout branch or ref in refs view
bind refs O !git checkout %(branch)
